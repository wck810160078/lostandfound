<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edu.lostandfound.dao.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.edu.lostandfound.po.Article" >
    <id column="article_id" property="articleId" jdbcType="INTEGER" />
    <result column="category_type" property="categoryType" jdbcType="VARCHAR" />
    <result column="article_title" property="articleTitle" jdbcType="VARCHAR" />
    <result column="article_image_url" property="articleImageUrl" jdbcType="VARCHAR" />
    <result column="article_src" property="articleSrc" jdbcType="VARCHAR" />
    <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.edu.lostandfound.po.Article" extends="BaseResultMap" >
    <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    article_id, category_type, article_title, article_image_url, article_src, create_time,
    update_time, create_user_id, state
  </sql>
  <sql id="Blob_Column_List" >
    article_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where article_id = #{articleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where article_id = #{articleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.edu.lostandfound.po.Article" >
    insert into article (article_id, category_type, article_title,
      article_image_url, article_src, create_time,
      update_time, create_user_id, state,
      article_content)
    values (#{articleId,jdbcType=INTEGER}, #{categoryType,jdbcType=VARCHAR}, #{articleTitle,jdbcType=VARCHAR},
      #{articleImageUrl,jdbcType=VARCHAR}, #{articleSrc,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR},
      #{articleContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.edu.lostandfound.po.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="categoryType != null" >
        category_type,
      </if>
      <if test="articleTitle != null" >
        article_title,
      </if>
      <if test="articleImageUrl != null" >
        article_image_url,
      </if>
      <if test="articleSrc != null" >
        article_src,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="articleContent != null" >
        article_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="categoryType != null" >
        #{categoryType,jdbcType=VARCHAR},
      </if>
      <if test="articleTitle != null" >
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleImageUrl != null" >
        #{articleImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="articleSrc != null" >
        #{articleSrc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="articleContent != null" >
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.edu.lostandfound.po.Article" >
    update article
    <set >
      <if test="categoryType != null" >
        category_type = #{categoryType,jdbcType=VARCHAR},
      </if>
      <if test="articleTitle != null" >
        article_title = #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleImageUrl != null" >
        article_image_url = #{articleImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="articleSrc != null" >
        article_src = #{articleSrc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="articleContent != null" >
        article_content = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.edu.lostandfound.po.Article" >
    update article
    set category_type = #{categoryType,jdbcType=VARCHAR},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      article_image_url = #{articleImageUrl,jdbcType=VARCHAR},
      article_src = #{articleSrc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
      article_content = #{articleContent,jdbcType=LONGVARCHAR}
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edu.lostandfound.po.Article" >
    update article
    set category_type = #{categoryType,jdbcType=VARCHAR},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      article_image_url = #{articleImageUrl,jdbcType=VARCHAR},
      article_src = #{articleSrc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR}
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>

  <!-- 分页 -->
  <select id="getArticleList" parameterType="com.edu.lostandfound.utils.PageData" resultType="com.edu.lostandfound.po.Article">
    select * from article
    <where>
      <if test="paramObj.articleTitle != null" >
        article_title like #{paramObj.articleTitle,jdbcType=VARCHAR}
      </if>
      <if test="paramObj.categoryType != null" >
        and category_type = #{paramObj.categoryType,jdbcType=VARCHAR}
      </if>
    </where>
    order by update_time desc
    <if test="page != null and size != null">
      limit #{page},#{size}
    </if>
  </select>
  <select id="getArticleListCount" resultType="Long" parameterType="com.edu.lostandfound.po.Article">
    select count(article_id) from article
    <where>
      <if test="articleTitle != null" >
        article_title like #{articleTitle,jdbcType=VARCHAR}
      </if>
      <if test="categoryType != null" >
        and category_type = #{categoryType,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
</mapper>